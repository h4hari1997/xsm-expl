State 90 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: Declarations Body

    2 Declarations: DECL Decllist ENDDECL
    3             | DECL ENDDECL

    4 Decllist: Decllist Decl
    5         | Decl

    6 Decl: Type Varlist ';'

    7 Type: INT
    8     | STR

    9 Varlist: Varlist ',' ID
   10        | Varlist ',' ID '[' NUM ']'
   11        | Varlist ',' ID '[' NUM ']' '[' NUM ']'
   12        | Varlist ',' MUL ID
   13        | ID
   14        | ID '[' NUM ']'
   15        | ID '[' NUM ']' '[' NUM ']'
   16        | MUL ID

   17 Body: START Slist END
   18     | START END

   19 Slist: Slist Stmt
   20      | Stmt

   21 Stmt: InputStmt ';'
   22     | OutputStmt ';'
   23     | AsgStmt ';'
   24     | Ifstmt ';'
   25     | Whilestmt ';'
   26     | Breakstmt ';'
   27     | Continuestmt ';'
   28     | Debugstmt ';'

   29 InputStmt: READ '(' ID ')'
   30          | READ '(' ID '[' E ']' ')'
   31          | READ '(' ID '[' E ']' '[' E ']' ')'
   32          | READ '(' MUL ID ')'

   33 OutputStmt: WRITE '(' E ')'

   34 AsgStmt: ID ASSIGN E
   35        | ID '[' E ']' ASSIGN E
   36        | ID '[' E ']' '[' E ']' ASSIGN E
   37        | MUL ID ASSIGN E
   38        | ID ASSIGN '&' ID

   39 Ifstmt: IF '(' E ')' THEN Slist ELSE Slist ENDIF
   40       | IF '(' E ')' THEN Slist ENDIF

   41 Whilestmt: WHILE '(' E ')' DO Slist ENDWHILE
   42          | REPEAT Slist UNTIL '(' E ')'
   43          | DO Slist WHILE '(' E ')'

   44 Breakstmt: BREAK

   45 Continuestmt: CONTINUE

   46 Debugstmt: BRKP

   47 E: E PLUS E
   48  | E MINUS E
   49  | E MUL E
   50  | E DIV E
   51  | E MOD E
   52  | '(' E ')'
   53  | E EQ E
   54  | E NE E
   55  | E LE E
   56  | E GE E
   57  | E LT E
   58  | E GT E
   59  | NUM
   60  | STRING
   61  | ID
   62  | ID '[' E ']'
   63  | ID '[' E ']' '[' E ']'
   64  | MUL ID
   65  | '&' ID


Terminals, with rules where they appear

$end (0) 0
'&' (38) 38 65
'(' (40) 29 30 31 32 33 39 40 41 42 43 52
')' (41) 29 30 31 32 33 39 40 41 42 43 52
',' (44) 9 10 11 12
';' (59) 6 21 22 23 24 25 26 27 28
'[' (91) 10 11 14 15 30 31 35 36 62 63
']' (93) 10 11 14 15 30 31 35 36 62 63
error (256)
NUM (258) 10 11 14 15 59
PLUS (259) 47
MINUS (260) 48
MUL (261) 12 16 32 37 49 64
DIV (262) 50
MOD (263) 51
LT (264) 57
GT (265) 58
LE (266) 55
GE (267) 56
EQ (268) 53
NE (269) 54
ID (270) 9 10 11 12 13 14 15 16 29 30 31 32 34 35 36 37 38 61 62 63
    64 65
ASSIGN (271) 34 35 36 37 38
START (272) 17 18
END (273) 17 18
DECL (274) 2 3
ENDDECL (275) 2 3
BRKP (276) 46
READ (277) 29 30 31 32
WRITE (278) 33
IF (279) 39 40
THEN (280) 39 40
ELSE (281) 39
ENDIF (282) 39 40
WHILE (283) 41 43
DO (284) 41 43
ENDWHILE (285) 41
BREAK (286) 44
CONTINUE (287) 45
REPEAT (288) 42
UNTIL (289) 42
INT (290) 7
STR (291) 8
STRING (292) 60


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
Declarations (47)
    on left: 2 3, on right: 1
Decllist (48)
    on left: 4 5, on right: 2 4
Decl (49)
    on left: 6, on right: 4 5
Type (50)
    on left: 7 8, on right: 6
Varlist (51)
    on left: 9 10 11 12 13 14 15 16, on right: 6 9 10 11 12
Body (52)
    on left: 17 18, on right: 1
Slist (53)
    on left: 19 20, on right: 17 19 39 40 41 42 43
Stmt (54)
    on left: 21 22 23 24 25 26 27 28, on right: 19 20
InputStmt (55)
    on left: 29 30 31 32, on right: 21
OutputStmt (56)
    on left: 33, on right: 22
AsgStmt (57)
    on left: 34 35 36 37 38, on right: 23
Ifstmt (58)
    on left: 39 40, on right: 24
Whilestmt (59)
    on left: 41 42 43, on right: 25
Breakstmt (60)
    on left: 44, on right: 26
Continuestmt (61)
    on left: 45, on right: 27
Debugstmt (62)
    on left: 46, on right: 28
E (63)
    on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
    65, on right: 30 31 33 34 35 36 37 39 40 41 42 43 47 48 49 50 51
    52 53 54 55 56 57 58 62 63


State 0

    0 $accept: . program $end

    DECL  shift, and go to state 1

    program       go to state 2
    Declarations  go to state 3


State 1

    2 Declarations: DECL . Decllist ENDDECL
    3             | DECL . ENDDECL

    ENDDECL  shift, and go to state 4
    INT      shift, and go to state 5
    STR      shift, and go to state 6

    Decllist  go to state 7
    Decl      go to state 8
    Type      go to state 9


State 2

    0 $accept: program . $end

    $end  shift, and go to state 10


State 3

    1 program: Declarations . Body

    START  shift, and go to state 11

    Body  go to state 12


State 4

    3 Declarations: DECL ENDDECL .

    $default  reduce using rule 3 (Declarations)


State 5

    7 Type: INT .

    $default  reduce using rule 7 (Type)


State 6

    8 Type: STR .

    $default  reduce using rule 8 (Type)


State 7

    2 Declarations: DECL Decllist . ENDDECL
    4 Decllist: Decllist . Decl

    ENDDECL  shift, and go to state 13
    INT      shift, and go to state 5
    STR      shift, and go to state 6

    Decl  go to state 14
    Type  go to state 9


State 8

    5 Decllist: Decl .

    $default  reduce using rule 5 (Decllist)


State 9

    6 Decl: Type . Varlist ';'

    MUL  shift, and go to state 15
    ID   shift, and go to state 16

    Varlist  go to state 17


State 10

    0 $accept: program $end .

    $default  accept


State 11

   17 Body: START . Slist END
   18     | START . END

    MUL       shift, and go to state 18
    ID        shift, and go to state 19
    END       shift, and go to state 20
    BRKP      shift, and go to state 21
    READ      shift, and go to state 22
    WRITE     shift, and go to state 23
    IF        shift, and go to state 24
    WHILE     shift, and go to state 25
    DO        shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    REPEAT    shift, and go to state 29

    Slist         go to state 30
    Stmt          go to state 31
    InputStmt     go to state 32
    OutputStmt    go to state 33
    AsgStmt       go to state 34
    Ifstmt        go to state 35
    Whilestmt     go to state 36
    Breakstmt     go to state 37
    Continuestmt  go to state 38
    Debugstmt     go to state 39


State 12

    1 program: Declarations Body .

    $default  reduce using rule 1 (program)


State 13

    2 Declarations: DECL Decllist ENDDECL .

    $default  reduce using rule 2 (Declarations)


State 14

    4 Decllist: Decllist Decl .

    $default  reduce using rule 4 (Decllist)


State 15

   16 Varlist: MUL . ID

    ID  shift, and go to state 40


State 16

   13 Varlist: ID .
   14        | ID . '[' NUM ']'
   15        | ID . '[' NUM ']' '[' NUM ']'

    '['  shift, and go to state 41

    $default  reduce using rule 13 (Varlist)


State 17

    6 Decl: Type Varlist . ';'
    9 Varlist: Varlist . ',' ID
   10        | Varlist . ',' ID '[' NUM ']'
   11        | Varlist . ',' ID '[' NUM ']' '[' NUM ']'
   12        | Varlist . ',' MUL ID

    ';'  shift, and go to state 42
    ','  shift, and go to state 43


State 18

   37 AsgStmt: MUL . ID ASSIGN E

    ID  shift, and go to state 44


State 19

   34 AsgStmt: ID . ASSIGN E
   35        | ID . '[' E ']' ASSIGN E
   36        | ID . '[' E ']' '[' E ']' ASSIGN E
   38        | ID . ASSIGN '&' ID

    ASSIGN  shift, and go to state 45
    '['     shift, and go to state 46


State 20

   18 Body: START END .

    $default  reduce using rule 18 (Body)


State 21

   46 Debugstmt: BRKP .

    $default  reduce using rule 46 (Debugstmt)


State 22

   29 InputStmt: READ . '(' ID ')'
   30          | READ . '(' ID '[' E ']' ')'
   31          | READ . '(' ID '[' E ']' '[' E ']' ')'
   32          | READ . '(' MUL ID ')'

    '('  shift, and go to state 47


State 23

   33 OutputStmt: WRITE . '(' E ')'

    '('  shift, and go to state 48


State 24

   39 Ifstmt: IF . '(' E ')' THEN Slist ELSE Slist ENDIF
   40       | IF . '(' E ')' THEN Slist ENDIF

    '('  shift, and go to state 49


State 25

   41 Whilestmt: WHILE . '(' E ')' DO Slist ENDWHILE

    '('  shift, and go to state 50


State 26

   43 Whilestmt: DO . Slist WHILE '(' E ')'

    MUL       shift, and go to state 18
    ID        shift, and go to state 19
    BRKP      shift, and go to state 21
    READ      shift, and go to state 22
    WRITE     shift, and go to state 23
    IF        shift, and go to state 24
    WHILE     shift, and go to state 25
    DO        shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    REPEAT    shift, and go to state 29

    Slist         go to state 51
    Stmt          go to state 31
    InputStmt     go to state 32
    OutputStmt    go to state 33
    AsgStmt       go to state 34
    Ifstmt        go to state 35
    Whilestmt     go to state 36
    Breakstmt     go to state 37
    Continuestmt  go to state 38
    Debugstmt     go to state 39


State 27

   44 Breakstmt: BREAK .

    $default  reduce using rule 44 (Breakstmt)


State 28

   45 Continuestmt: CONTINUE .

    $default  reduce using rule 45 (Continuestmt)


State 29

   42 Whilestmt: REPEAT . Slist UNTIL '(' E ')'

    MUL       shift, and go to state 18
    ID        shift, and go to state 19
    BRKP      shift, and go to state 21
    READ      shift, and go to state 22
    WRITE     shift, and go to state 23
    IF        shift, and go to state 24
    WHILE     shift, and go to state 25
    DO        shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    REPEAT    shift, and go to state 29

    Slist         go to state 52
    Stmt          go to state 31
    InputStmt     go to state 32
    OutputStmt    go to state 33
    AsgStmt       go to state 34
    Ifstmt        go to state 35
    Whilestmt     go to state 36
    Breakstmt     go to state 37
    Continuestmt  go to state 38
    Debugstmt     go to state 39


State 30

   17 Body: START Slist . END
   19 Slist: Slist . Stmt

    MUL       shift, and go to state 18
    ID        shift, and go to state 19
    END       shift, and go to state 53
    BRKP      shift, and go to state 21
    READ      shift, and go to state 22
    WRITE     shift, and go to state 23
    IF        shift, and go to state 24
    WHILE     shift, and go to state 25
    DO        shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    REPEAT    shift, and go to state 29

    Stmt          go to state 54
    InputStmt     go to state 32
    OutputStmt    go to state 33
    AsgStmt       go to state 34
    Ifstmt        go to state 35
    Whilestmt     go to state 36
    Breakstmt     go to state 37
    Continuestmt  go to state 38
    Debugstmt     go to state 39


State 31

   20 Slist: Stmt .

    $default  reduce using rule 20 (Slist)


State 32

   21 Stmt: InputStmt . ';'

    ';'  shift, and go to state 55


State 33

   22 Stmt: OutputStmt . ';'

    ';'  shift, and go to state 56


State 34

   23 Stmt: AsgStmt . ';'

    ';'  shift, and go to state 57


State 35

   24 Stmt: Ifstmt . ';'

    ';'  shift, and go to state 58


State 36

   25 Stmt: Whilestmt . ';'

    ';'  shift, and go to state 59


State 37

   26 Stmt: Breakstmt . ';'

    ';'  shift, and go to state 60


State 38

   27 Stmt: Continuestmt . ';'

    ';'  shift, and go to state 61


State 39

   28 Stmt: Debugstmt . ';'

    ';'  shift, and go to state 62


State 40

   16 Varlist: MUL ID .

    $default  reduce using rule 16 (Varlist)


State 41

   14 Varlist: ID '[' . NUM ']'
   15        | ID '[' . NUM ']' '[' NUM ']'

    NUM  shift, and go to state 63


State 42

    6 Decl: Type Varlist ';' .

    $default  reduce using rule 6 (Decl)


State 43

    9 Varlist: Varlist ',' . ID
   10        | Varlist ',' . ID '[' NUM ']'
   11        | Varlist ',' . ID '[' NUM ']' '[' NUM ']'
   12        | Varlist ',' . MUL ID

    MUL  shift, and go to state 64
    ID   shift, and go to state 65


State 44

   37 AsgStmt: MUL ID . ASSIGN E

    ASSIGN  shift, and go to state 66


State 45

   34 AsgStmt: ID ASSIGN . E
   38        | ID ASSIGN . '&' ID

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 72

    E  go to state 73


State 46

   35 AsgStmt: ID '[' . E ']' ASSIGN E
   36        | ID '[' . E ']' '[' E ']' ASSIGN E

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 75


State 47

   29 InputStmt: READ '(' . ID ')'
   30          | READ '(' . ID '[' E ']' ')'
   31          | READ '(' . ID '[' E ']' '[' E ']' ')'
   32          | READ '(' . MUL ID ')'

    MUL  shift, and go to state 76
    ID   shift, and go to state 77


State 48

   33 OutputStmt: WRITE '(' . E ')'

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 78


State 49

   39 Ifstmt: IF '(' . E ')' THEN Slist ELSE Slist ENDIF
   40       | IF '(' . E ')' THEN Slist ENDIF

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 79


State 50

   41 Whilestmt: WHILE '(' . E ')' DO Slist ENDWHILE

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 80


State 51

   19 Slist: Slist . Stmt
   43 Whilestmt: DO Slist . WHILE '(' E ')'

    MUL       shift, and go to state 18
    ID        shift, and go to state 19
    BRKP      shift, and go to state 21
    READ      shift, and go to state 22
    WRITE     shift, and go to state 23
    IF        shift, and go to state 24
    WHILE     shift, and go to state 81
    DO        shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    REPEAT    shift, and go to state 29

    Stmt          go to state 54
    InputStmt     go to state 32
    OutputStmt    go to state 33
    AsgStmt       go to state 34
    Ifstmt        go to state 35
    Whilestmt     go to state 36
    Breakstmt     go to state 37
    Continuestmt  go to state 38
    Debugstmt     go to state 39


State 52

   19 Slist: Slist . Stmt
   42 Whilestmt: REPEAT Slist . UNTIL '(' E ')'

    MUL       shift, and go to state 18
    ID        shift, and go to state 19
    BRKP      shift, and go to state 21
    READ      shift, and go to state 22
    WRITE     shift, and go to state 23
    IF        shift, and go to state 24
    WHILE     shift, and go to state 25
    DO        shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    REPEAT    shift, and go to state 29
    UNTIL     shift, and go to state 82

    Stmt          go to state 54
    InputStmt     go to state 32
    OutputStmt    go to state 33
    AsgStmt       go to state 34
    Ifstmt        go to state 35
    Whilestmt     go to state 36
    Breakstmt     go to state 37
    Continuestmt  go to state 38
    Debugstmt     go to state 39


State 53

   17 Body: START Slist END .

    $default  reduce using rule 17 (Body)


State 54

   19 Slist: Slist Stmt .

    $default  reduce using rule 19 (Slist)


State 55

   21 Stmt: InputStmt ';' .

    $default  reduce using rule 21 (Stmt)


State 56

   22 Stmt: OutputStmt ';' .

    $default  reduce using rule 22 (Stmt)


State 57

   23 Stmt: AsgStmt ';' .

    $default  reduce using rule 23 (Stmt)


State 58

   24 Stmt: Ifstmt ';' .

    $default  reduce using rule 24 (Stmt)


State 59

   25 Stmt: Whilestmt ';' .

    $default  reduce using rule 25 (Stmt)


State 60

   26 Stmt: Breakstmt ';' .

    $default  reduce using rule 26 (Stmt)


State 61

   27 Stmt: Continuestmt ';' .

    $default  reduce using rule 27 (Stmt)


State 62

   28 Stmt: Debugstmt ';' .

    $default  reduce using rule 28 (Stmt)


State 63

   14 Varlist: ID '[' NUM . ']'
   15        | ID '[' NUM . ']' '[' NUM ']'

    ']'  shift, and go to state 83


State 64

   12 Varlist: Varlist ',' MUL . ID

    ID  shift, and go to state 84


State 65

    9 Varlist: Varlist ',' ID .
   10        | Varlist ',' ID . '[' NUM ']'
   11        | Varlist ',' ID . '[' NUM ']' '[' NUM ']'

    '['  shift, and go to state 85

    $default  reduce using rule 9 (Varlist)


State 66

   37 AsgStmt: MUL ID ASSIGN . E

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 86


State 67

   59 E: NUM .

    $default  reduce using rule 59 (E)


State 68

   64 E: MUL . ID

    ID  shift, and go to state 87


State 69

   61 E: ID .
   62  | ID . '[' E ']'
   63  | ID . '[' E ']' '[' E ']'

    '['  shift, and go to state 88

    $default  reduce using rule 61 (E)


State 70

   60 E: STRING .

    $default  reduce using rule 60 (E)


State 71

   52 E: '(' . E ')'

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 89


State 72

   38 AsgStmt: ID ASSIGN '&' . ID
   65 E: '&' . ID

    ID  shift, and go to state 90


State 73

   34 AsgStmt: ID ASSIGN E .
   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E

    PLUS   shift, and go to state 91
    MINUS  shift, and go to state 92
    MUL    shift, and go to state 93
    DIV    shift, and go to state 94
    MOD    shift, and go to state 95
    LT     shift, and go to state 96
    GT     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101

    $default  reduce using rule 34 (AsgStmt)


State 74

   65 E: '&' . ID

    ID  shift, and go to state 102


State 75

   35 AsgStmt: ID '[' E . ']' ASSIGN E
   36        | ID '[' E . ']' '[' E ']' ASSIGN E
   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E

    PLUS   shift, and go to state 91
    MINUS  shift, and go to state 92
    MUL    shift, and go to state 93
    DIV    shift, and go to state 94
    MOD    shift, and go to state 95
    LT     shift, and go to state 96
    GT     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    ']'    shift, and go to state 103


State 76

   32 InputStmt: READ '(' MUL . ID ')'

    ID  shift, and go to state 104


State 77

   29 InputStmt: READ '(' ID . ')'
   30          | READ '(' ID . '[' E ']' ')'
   31          | READ '(' ID . '[' E ']' '[' E ']' ')'

    '['  shift, and go to state 105
    ')'  shift, and go to state 106


State 78

   33 OutputStmt: WRITE '(' E . ')'
   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E

    PLUS   shift, and go to state 91
    MINUS  shift, and go to state 92
    MUL    shift, and go to state 93
    DIV    shift, and go to state 94
    MOD    shift, and go to state 95
    LT     shift, and go to state 96
    GT     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    ')'    shift, and go to state 107


State 79

   39 Ifstmt: IF '(' E . ')' THEN Slist ELSE Slist ENDIF
   40       | IF '(' E . ')' THEN Slist ENDIF
   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E

    PLUS   shift, and go to state 91
    MINUS  shift, and go to state 92
    MUL    shift, and go to state 93
    DIV    shift, and go to state 94
    MOD    shift, and go to state 95
    LT     shift, and go to state 96
    GT     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    ')'    shift, and go to state 108


State 80

   41 Whilestmt: WHILE '(' E . ')' DO Slist ENDWHILE
   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E

    PLUS   shift, and go to state 91
    MINUS  shift, and go to state 92
    MUL    shift, and go to state 93
    DIV    shift, and go to state 94
    MOD    shift, and go to state 95
    LT     shift, and go to state 96
    GT     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    ')'    shift, and go to state 109


State 81

   41 Whilestmt: WHILE . '(' E ')' DO Slist ENDWHILE
   43          | DO Slist WHILE . '(' E ')'

    '('  shift, and go to state 110


State 82

   42 Whilestmt: REPEAT Slist UNTIL . '(' E ')'

    '('  shift, and go to state 111


State 83

   14 Varlist: ID '[' NUM ']' .
   15        | ID '[' NUM ']' . '[' NUM ']'

    '['  shift, and go to state 112

    $default  reduce using rule 14 (Varlist)


State 84

   12 Varlist: Varlist ',' MUL ID .

    $default  reduce using rule 12 (Varlist)


State 85

   10 Varlist: Varlist ',' ID '[' . NUM ']'
   11        | Varlist ',' ID '[' . NUM ']' '[' NUM ']'

    NUM  shift, and go to state 113


State 86

   37 AsgStmt: MUL ID ASSIGN E .
   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E

    PLUS   shift, and go to state 91
    MINUS  shift, and go to state 92
    MUL    shift, and go to state 93
    DIV    shift, and go to state 94
    MOD    shift, and go to state 95
    LT     shift, and go to state 96
    GT     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101

    $default  reduce using rule 37 (AsgStmt)


State 87

   64 E: MUL ID .

    $default  reduce using rule 64 (E)


State 88

   62 E: ID '[' . E ']'
   63  | ID '[' . E ']' '[' E ']'

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 114


State 89

   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   52  | '(' E . ')'
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E

    PLUS   shift, and go to state 91
    MINUS  shift, and go to state 92
    MUL    shift, and go to state 93
    DIV    shift, and go to state 94
    MOD    shift, and go to state 95
    LT     shift, and go to state 96
    GT     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    ')'    shift, and go to state 115


State 90

   38 AsgStmt: ID ASSIGN '&' ID .
   65 E: '&' ID .

    ';'       reduce using rule 38 (AsgStmt)
    ';'       [reduce using rule 65 (E)]
    $default  reduce using rule 65 (E)


State 91

   47 E: E PLUS . E

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 116


State 92

   48 E: E MINUS . E

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 117


State 93

   49 E: E MUL . E

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 118


State 94

   50 E: E DIV . E

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 119


State 95

   51 E: E MOD . E

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 120


State 96

   57 E: E LT . E

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 121


State 97

   58 E: E GT . E

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 122


State 98

   55 E: E LE . E

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 123


State 99

   56 E: E GE . E

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 124


State 100

   53 E: E EQ . E

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 125


State 101

   54 E: E NE . E

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 126


State 102

   65 E: '&' ID .

    $default  reduce using rule 65 (E)


State 103

   35 AsgStmt: ID '[' E ']' . ASSIGN E
   36        | ID '[' E ']' . '[' E ']' ASSIGN E

    ASSIGN  shift, and go to state 127
    '['     shift, and go to state 128


State 104

   32 InputStmt: READ '(' MUL ID . ')'

    ')'  shift, and go to state 129


State 105

   30 InputStmt: READ '(' ID '[' . E ']' ')'
   31          | READ '(' ID '[' . E ']' '[' E ']' ')'

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 130


State 106

   29 InputStmt: READ '(' ID ')' .

    $default  reduce using rule 29 (InputStmt)


State 107

   33 OutputStmt: WRITE '(' E ')' .

    $default  reduce using rule 33 (OutputStmt)


State 108

   39 Ifstmt: IF '(' E ')' . THEN Slist ELSE Slist ENDIF
   40       | IF '(' E ')' . THEN Slist ENDIF

    THEN  shift, and go to state 131


State 109

   41 Whilestmt: WHILE '(' E ')' . DO Slist ENDWHILE

    DO  shift, and go to state 132


State 110

   41 Whilestmt: WHILE '(' . E ')' DO Slist ENDWHILE
   43          | DO Slist WHILE '(' . E ')'

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 133


State 111

   42 Whilestmt: REPEAT Slist UNTIL '(' . E ')'

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 134


State 112

   15 Varlist: ID '[' NUM ']' '[' . NUM ']'

    NUM  shift, and go to state 135


State 113

   10 Varlist: Varlist ',' ID '[' NUM . ']'
   11        | Varlist ',' ID '[' NUM . ']' '[' NUM ']'

    ']'  shift, and go to state 136


State 114

   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E
   62  | ID '[' E . ']'
   63  | ID '[' E . ']' '[' E ']'

    PLUS   shift, and go to state 91
    MINUS  shift, and go to state 92
    MUL    shift, and go to state 93
    DIV    shift, and go to state 94
    MOD    shift, and go to state 95
    LT     shift, and go to state 96
    GT     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    ']'    shift, and go to state 137


State 115

   52 E: '(' E ')' .

    $default  reduce using rule 52 (E)


State 116

   47 E: E . PLUS E
   47  | E PLUS E .
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E

    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95

    $default  reduce using rule 47 (E)


State 117

   47 E: E . PLUS E
   48  | E . MINUS E
   48  | E MINUS E .
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E

    MUL  shift, and go to state 93
    DIV  shift, and go to state 94
    MOD  shift, and go to state 95

    $default  reduce using rule 48 (E)


State 118

   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   49  | E MUL E .
   50  | E . DIV E
   51  | E . MOD E
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E

    $default  reduce using rule 49 (E)


State 119

   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   50  | E DIV E .
   51  | E . MOD E
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E

    $default  reduce using rule 50 (E)


State 120

   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   51  | E MOD E .
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E

    $default  reduce using rule 51 (E)


State 121

   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   57  | E LT E .
   58  | E . GT E

    PLUS   shift, and go to state 91
    MINUS  shift, and go to state 92
    MUL    shift, and go to state 93
    DIV    shift, and go to state 94
    MOD    shift, and go to state 95

    LT  error (nonassociative)
    GT  error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)

    $default  reduce using rule 57 (E)


State 122

   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E
   58  | E GT E .

    PLUS   shift, and go to state 91
    MINUS  shift, and go to state 92
    MUL    shift, and go to state 93
    DIV    shift, and go to state 94
    MOD    shift, and go to state 95

    LT  error (nonassociative)
    GT  error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)

    $default  reduce using rule 58 (E)


State 123

   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   55  | E LE E .
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E

    PLUS   shift, and go to state 91
    MINUS  shift, and go to state 92
    MUL    shift, and go to state 93
    DIV    shift, and go to state 94
    MOD    shift, and go to state 95

    LT  error (nonassociative)
    GT  error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)

    $default  reduce using rule 55 (E)


State 124

   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   56  | E GE E .
   57  | E . LT E
   58  | E . GT E

    PLUS   shift, and go to state 91
    MINUS  shift, and go to state 92
    MUL    shift, and go to state 93
    DIV    shift, and go to state 94
    MOD    shift, and go to state 95

    LT  error (nonassociative)
    GT  error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)

    $default  reduce using rule 56 (E)


State 125

   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   53  | E . EQ E
   53  | E EQ E .
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E

    PLUS   shift, and go to state 91
    MINUS  shift, and go to state 92
    MUL    shift, and go to state 93
    DIV    shift, and go to state 94
    MOD    shift, and go to state 95

    LT  error (nonassociative)
    GT  error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)

    $default  reduce using rule 53 (E)


State 126

   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   53  | E . EQ E
   54  | E . NE E
   54  | E NE E .
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E

    PLUS   shift, and go to state 91
    MINUS  shift, and go to state 92
    MUL    shift, and go to state 93
    DIV    shift, and go to state 94
    MOD    shift, and go to state 95

    LT  error (nonassociative)
    GT  error (nonassociative)
    LE  error (nonassociative)
    GE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)

    $default  reduce using rule 54 (E)


State 127

   35 AsgStmt: ID '[' E ']' ASSIGN . E

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 138


State 128

   36 AsgStmt: ID '[' E ']' '[' . E ']' ASSIGN E

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 139


State 129

   32 InputStmt: READ '(' MUL ID ')' .

    $default  reduce using rule 32 (InputStmt)


State 130

   30 InputStmt: READ '(' ID '[' E . ']' ')'
   31          | READ '(' ID '[' E . ']' '[' E ']' ')'
   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E

    PLUS   shift, and go to state 91
    MINUS  shift, and go to state 92
    MUL    shift, and go to state 93
    DIV    shift, and go to state 94
    MOD    shift, and go to state 95
    LT     shift, and go to state 96
    GT     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    ']'    shift, and go to state 140


State 131

   39 Ifstmt: IF '(' E ')' THEN . Slist ELSE Slist ENDIF
   40       | IF '(' E ')' THEN . Slist ENDIF

    MUL       shift, and go to state 18
    ID        shift, and go to state 19
    BRKP      shift, and go to state 21
    READ      shift, and go to state 22
    WRITE     shift, and go to state 23
    IF        shift, and go to state 24
    WHILE     shift, and go to state 25
    DO        shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    REPEAT    shift, and go to state 29

    Slist         go to state 141
    Stmt          go to state 31
    InputStmt     go to state 32
    OutputStmt    go to state 33
    AsgStmt       go to state 34
    Ifstmt        go to state 35
    Whilestmt     go to state 36
    Breakstmt     go to state 37
    Continuestmt  go to state 38
    Debugstmt     go to state 39


State 132

   41 Whilestmt: WHILE '(' E ')' DO . Slist ENDWHILE

    MUL       shift, and go to state 18
    ID        shift, and go to state 19
    BRKP      shift, and go to state 21
    READ      shift, and go to state 22
    WRITE     shift, and go to state 23
    IF        shift, and go to state 24
    WHILE     shift, and go to state 25
    DO        shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    REPEAT    shift, and go to state 29

    Slist         go to state 142
    Stmt          go to state 31
    InputStmt     go to state 32
    OutputStmt    go to state 33
    AsgStmt       go to state 34
    Ifstmt        go to state 35
    Whilestmt     go to state 36
    Breakstmt     go to state 37
    Continuestmt  go to state 38
    Debugstmt     go to state 39


State 133

   41 Whilestmt: WHILE '(' E . ')' DO Slist ENDWHILE
   43          | DO Slist WHILE '(' E . ')'
   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E

    PLUS   shift, and go to state 91
    MINUS  shift, and go to state 92
    MUL    shift, and go to state 93
    DIV    shift, and go to state 94
    MOD    shift, and go to state 95
    LT     shift, and go to state 96
    GT     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    ')'    shift, and go to state 143


State 134

   42 Whilestmt: REPEAT Slist UNTIL '(' E . ')'
   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E

    PLUS   shift, and go to state 91
    MINUS  shift, and go to state 92
    MUL    shift, and go to state 93
    DIV    shift, and go to state 94
    MOD    shift, and go to state 95
    LT     shift, and go to state 96
    GT     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    ')'    shift, and go to state 144


State 135

   15 Varlist: ID '[' NUM ']' '[' NUM . ']'

    ']'  shift, and go to state 145


State 136

   10 Varlist: Varlist ',' ID '[' NUM ']' .
   11        | Varlist ',' ID '[' NUM ']' . '[' NUM ']'

    '['  shift, and go to state 146

    $default  reduce using rule 10 (Varlist)


State 137

   62 E: ID '[' E ']' .
   63  | ID '[' E ']' . '[' E ']'

    '['  shift, and go to state 147

    $default  reduce using rule 62 (E)


State 138

   35 AsgStmt: ID '[' E ']' ASSIGN E .
   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E

    PLUS   shift, and go to state 91
    MINUS  shift, and go to state 92
    MUL    shift, and go to state 93
    DIV    shift, and go to state 94
    MOD    shift, and go to state 95
    LT     shift, and go to state 96
    GT     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101

    $default  reduce using rule 35 (AsgStmt)


State 139

   36 AsgStmt: ID '[' E ']' '[' E . ']' ASSIGN E
   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E

    PLUS   shift, and go to state 91
    MINUS  shift, and go to state 92
    MUL    shift, and go to state 93
    DIV    shift, and go to state 94
    MOD    shift, and go to state 95
    LT     shift, and go to state 96
    GT     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    ']'    shift, and go to state 148


State 140

   30 InputStmt: READ '(' ID '[' E ']' . ')'
   31          | READ '(' ID '[' E ']' . '[' E ']' ')'

    '['  shift, and go to state 149
    ')'  shift, and go to state 150


State 141

   19 Slist: Slist . Stmt
   39 Ifstmt: IF '(' E ')' THEN Slist . ELSE Slist ENDIF
   40       | IF '(' E ')' THEN Slist . ENDIF

    MUL       shift, and go to state 18
    ID        shift, and go to state 19
    BRKP      shift, and go to state 21
    READ      shift, and go to state 22
    WRITE     shift, and go to state 23
    IF        shift, and go to state 24
    ELSE      shift, and go to state 151
    ENDIF     shift, and go to state 152
    WHILE     shift, and go to state 25
    DO        shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    REPEAT    shift, and go to state 29

    Stmt          go to state 54
    InputStmt     go to state 32
    OutputStmt    go to state 33
    AsgStmt       go to state 34
    Ifstmt        go to state 35
    Whilestmt     go to state 36
    Breakstmt     go to state 37
    Continuestmt  go to state 38
    Debugstmt     go to state 39


State 142

   19 Slist: Slist . Stmt
   41 Whilestmt: WHILE '(' E ')' DO Slist . ENDWHILE

    MUL       shift, and go to state 18
    ID        shift, and go to state 19
    BRKP      shift, and go to state 21
    READ      shift, and go to state 22
    WRITE     shift, and go to state 23
    IF        shift, and go to state 24
    WHILE     shift, and go to state 25
    DO        shift, and go to state 26
    ENDWHILE  shift, and go to state 153
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    REPEAT    shift, and go to state 29

    Stmt          go to state 54
    InputStmt     go to state 32
    OutputStmt    go to state 33
    AsgStmt       go to state 34
    Ifstmt        go to state 35
    Whilestmt     go to state 36
    Breakstmt     go to state 37
    Continuestmt  go to state 38
    Debugstmt     go to state 39


State 143

   41 Whilestmt: WHILE '(' E ')' . DO Slist ENDWHILE
   43          | DO Slist WHILE '(' E ')' .

    DO  shift, and go to state 132

    $default  reduce using rule 43 (Whilestmt)


State 144

   42 Whilestmt: REPEAT Slist UNTIL '(' E ')' .

    $default  reduce using rule 42 (Whilestmt)


State 145

   15 Varlist: ID '[' NUM ']' '[' NUM ']' .

    $default  reduce using rule 15 (Varlist)


State 146

   11 Varlist: Varlist ',' ID '[' NUM ']' '[' . NUM ']'

    NUM  shift, and go to state 154


State 147

   63 E: ID '[' E ']' '[' . E ']'

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 155


State 148

   36 AsgStmt: ID '[' E ']' '[' E ']' . ASSIGN E

    ASSIGN  shift, and go to state 156


State 149

   31 InputStmt: READ '(' ID '[' E ']' '[' . E ']' ')'

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 157


State 150

   30 InputStmt: READ '(' ID '[' E ']' ')' .

    $default  reduce using rule 30 (InputStmt)


State 151

   39 Ifstmt: IF '(' E ')' THEN Slist ELSE . Slist ENDIF

    MUL       shift, and go to state 18
    ID        shift, and go to state 19
    BRKP      shift, and go to state 21
    READ      shift, and go to state 22
    WRITE     shift, and go to state 23
    IF        shift, and go to state 24
    WHILE     shift, and go to state 25
    DO        shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    REPEAT    shift, and go to state 29

    Slist         go to state 158
    Stmt          go to state 31
    InputStmt     go to state 32
    OutputStmt    go to state 33
    AsgStmt       go to state 34
    Ifstmt        go to state 35
    Whilestmt     go to state 36
    Breakstmt     go to state 37
    Continuestmt  go to state 38
    Debugstmt     go to state 39


State 152

   40 Ifstmt: IF '(' E ')' THEN Slist ENDIF .

    $default  reduce using rule 40 (Ifstmt)


State 153

   41 Whilestmt: WHILE '(' E ')' DO Slist ENDWHILE .

    $default  reduce using rule 41 (Whilestmt)


State 154

   11 Varlist: Varlist ',' ID '[' NUM ']' '[' NUM . ']'

    ']'  shift, and go to state 159


State 155

   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E
   63  | ID '[' E ']' '[' E . ']'

    PLUS   shift, and go to state 91
    MINUS  shift, and go to state 92
    MUL    shift, and go to state 93
    DIV    shift, and go to state 94
    MOD    shift, and go to state 95
    LT     shift, and go to state 96
    GT     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    ']'    shift, and go to state 160


State 156

   36 AsgStmt: ID '[' E ']' '[' E ']' ASSIGN . E

    NUM     shift, and go to state 67
    MUL     shift, and go to state 68
    ID      shift, and go to state 69
    STRING  shift, and go to state 70
    '('     shift, and go to state 71
    '&'     shift, and go to state 74

    E  go to state 161


State 157

   31 InputStmt: READ '(' ID '[' E ']' '[' E . ']' ')'
   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E

    PLUS   shift, and go to state 91
    MINUS  shift, and go to state 92
    MUL    shift, and go to state 93
    DIV    shift, and go to state 94
    MOD    shift, and go to state 95
    LT     shift, and go to state 96
    GT     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101
    ']'    shift, and go to state 162


State 158

   19 Slist: Slist . Stmt
   39 Ifstmt: IF '(' E ')' THEN Slist ELSE Slist . ENDIF

    MUL       shift, and go to state 18
    ID        shift, and go to state 19
    BRKP      shift, and go to state 21
    READ      shift, and go to state 22
    WRITE     shift, and go to state 23
    IF        shift, and go to state 24
    ENDIF     shift, and go to state 163
    WHILE     shift, and go to state 25
    DO        shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    REPEAT    shift, and go to state 29

    Stmt          go to state 54
    InputStmt     go to state 32
    OutputStmt    go to state 33
    AsgStmt       go to state 34
    Ifstmt        go to state 35
    Whilestmt     go to state 36
    Breakstmt     go to state 37
    Continuestmt  go to state 38
    Debugstmt     go to state 39


State 159

   11 Varlist: Varlist ',' ID '[' NUM ']' '[' NUM ']' .

    $default  reduce using rule 11 (Varlist)


State 160

   63 E: ID '[' E ']' '[' E ']' .

    $default  reduce using rule 63 (E)


State 161

   36 AsgStmt: ID '[' E ']' '[' E ']' ASSIGN E .
   47 E: E . PLUS E
   48  | E . MINUS E
   49  | E . MUL E
   50  | E . DIV E
   51  | E . MOD E
   53  | E . EQ E
   54  | E . NE E
   55  | E . LE E
   56  | E . GE E
   57  | E . LT E
   58  | E . GT E

    PLUS   shift, and go to state 91
    MINUS  shift, and go to state 92
    MUL    shift, and go to state 93
    DIV    shift, and go to state 94
    MOD    shift, and go to state 95
    LT     shift, and go to state 96
    GT     shift, and go to state 97
    LE     shift, and go to state 98
    GE     shift, and go to state 99
    EQ     shift, and go to state 100
    NE     shift, and go to state 101

    $default  reduce using rule 36 (AsgStmt)


State 162

   31 InputStmt: READ '(' ID '[' E ']' '[' E ']' . ')'

    ')'  shift, and go to state 164


State 163

   39 Ifstmt: IF '(' E ')' THEN Slist ELSE Slist ENDIF .

    $default  reduce using rule 39 (Ifstmt)


State 164

   31 InputStmt: READ '(' ID '[' E ']' '[' E ']' ')' .

    $default  reduce using rule 31 (InputStmt)
